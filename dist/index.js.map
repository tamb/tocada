{
  "version": 3,
  "sources": ["..\\src\\utils.ts", "..\\src\\index.ts"],
  "sourcesContent": [
    "export function difference(num1: number, num2: number): number {\r\n  if (num1 < num2) {\r\n    return num2 - num1;\r\n  } else {\r\n    return num1 - num2;\r\n  }\r\n}\r\n",
  "import { ITocadaOptions, TGestureType, ISwipeEventDetails } from \"types\";\r\nimport { difference } from \"./utils\";\r\n\r\nexport default class Tocada {\r\n  element: HTMLElement | null;\r\n\r\n  // detail object properties\r\n  private startX: number = 0;\r\n  private startY: number = 0;\r\n  private startTime: number = 0;\r\n  private startPressure: number = 0;\r\n  private endPressure: number = 0;\r\n  private startingElement: HTMLElement | null = null;\r\n  private touchedElements: HTMLElement[] = [];\r\n\r\n  // options\r\n  private thresholds!: {\r\n    swipeThreshold: number;\r\n  };\r\n  private eventPrefix: string = \"\";\r\n\r\n  private gestureStartDistance: number = 0;\r\n  private latestGestureDistance: number = 0;\r\n  private isMultiTouch = false;\r\n  private activeTouches = 0;\r\n  private touchCount = 0;\r\n\r\n  constructor(queryStringOrElement: string | HTMLElement, options: ITocadaOptions = {}) {\r\n    this.element =\r\n      typeof queryStringOrElement === \"string\"\r\n        ? document.querySelector(queryStringOrElement)\r\n        : queryStringOrElement;\r\n    if (!this.element) {\r\n      console.error(\"Element not found\");\r\n      return;\r\n    }\r\n\r\n    const { thresholds = {}, eventPrefix = \"\" } = options;\r\n    this.thresholds = {\r\n      swipeThreshold: thresholds.swipeThreshold || 50,\r\n    };\r\n    this.eventPrefix = eventPrefix;\r\n\r\n    this.element.addEventListener(\"touchstart\", this.handleTouchStart, false);\r\n    this.element.addEventListener(\"touchmove\", this.handleTouchMove, false);\r\n    this.element.addEventListener(\"touchend\", this.handleTouchEnd, false);\r\n  }\r\n\r\n  destroy = () => {\r\n    this.element?.removeEventListener(\"touchstart\", this.handleTouchStart);\r\n    this.element?.removeEventListener(\"touchmove\", this.handleTouchMove);\r\n    this.element?.removeEventListener(\"touchend\", this.handleTouchEnd);\r\n  };\r\n\r\n  private handleTouchStart = (event: TouchEvent) => {\r\n    this.activeTouches += event.changedTouches.length;\r\n    this.touchCount = event.touches.length;\r\n\r\n    if (this.activeTouches > 1) {\r\n      this.isMultiTouch = true;\r\n      this.gestureStartDistance = this.getDistanceBetweenTouchPoints(event.touches);\r\n      this.handleGestureStart(event);\r\n    } else {\r\n      this.isMultiTouch = false;\r\n      this.handleSwipeStart(event);\r\n    }\r\n  };\r\n\r\n  private handleTouchMove = (event: TouchEvent) => {\r\n    // Prevent default behavior to prevent scrolling\r\n    event.preventDefault();\r\n    const x = event.touches[0].clientX;\r\n    const y = event.touches[0].clientY;\r\n    const element = document.elementFromPoint(x, y) as HTMLElement;\r\n    if (element) this.touchedElements.push(element);\r\n\r\n    if (this.isMultiTouch) {\r\n      this.handleGestureMove(event);\r\n    }\r\n  };\r\n\r\n  private handleTouchEnd = (event: TouchEvent) => {\r\n    if (this.activeTouches >= 2) {\r\n      this.handleGestureEnd(event);\r\n      this.touchCount = 0;\r\n    } else if (this.activeTouches === 1) {\r\n      this.handleSwipeEnd(event);\r\n      this.touchCount = 0;\r\n    }\r\n\r\n    this.activeTouches -= event.changedTouches.length;\r\n  };\r\n\r\n  private handleSwipeStart = (event: TouchEvent) => {\r\n    const touch = event.touches[0];\r\n    this.startX = touch.clientX;\r\n    this.startY = touch.clientY;\r\n    this.startTime = Date.now();\r\n    this.startPressure = touch.force || 0;\r\n    this.startingElement = document.elementsFromPoint(this.startX, this.startY)[0] as HTMLElement;\r\n\r\n    this.touchedElements.push(this.startingElement);\r\n  };\r\n\r\n  private handleSwipeEnd = (event: TouchEvent) => {\r\n    if (!this.isMultiTouch && this.touchCount === 1) {\r\n      // Handle swipe gesture\r\n      const touch = event.changedTouches[0];\r\n      const endTime = Date.now();\r\n      const deltaTime = endTime - this.startTime;\r\n      const deltaX = difference(this.startX, touch.clientX);\r\n      const deltaY = difference(this.startY, touch.clientY);\r\n      const distanceX = Math.abs(deltaX);\r\n      const distanceY = Math.abs(deltaY);\r\n      const distance = Math.hypot(distanceX, distanceY);\r\n      const velocityX = deltaX / deltaTime;\r\n      const velocityY = deltaY / deltaTime;\r\n      const velocity = distance / deltaTime;\r\n      this.endPressure = touch.force || 0;\r\n      const avgPressure = (this.startPressure + this.endPressure) / 2;\r\n      const endingElement = document.elementFromPoint(touch.clientX, touch.clientY) as HTMLElement;\r\n\r\n      const detail = {\r\n        velocityX,\r\n        velocityY,\r\n        velocity,\r\n        avgPressure,\r\n        startPressure: this.startPressure,\r\n        endPressure: this.endPressure,\r\n        startTime: this.startTime,\r\n        endTime,\r\n        distanceX,\r\n        distanceY,\r\n        distance,\r\n        startingElement: this.startingElement,\r\n        endingElement,\r\n        touchedElements: this.touchedElements,\r\n      };\r\n\r\n      this.dispatchSwipeEvent(\"swipe\", detail);\r\n\r\n      const xDirection = this.startX < touch.clientX ? \"swiperight\" : \"swipeleft\";\r\n      const yDirection = this.startY < touch.clientY ? \"swipedown\" : \"swipeup\";\r\n      const gestureType: TGestureType = deltaX > deltaY ? xDirection : yDirection;\r\n\r\n      this.dispatchSwipeEvent(gestureType, detail);\r\n\r\n      this.touchedElements = [];\r\n    }\r\n  };\r\n\r\n  private handleGestureStart = (event: TouchEvent) => {\r\n    this.isMultiTouch = true;\r\n  };\r\n\r\n  private handleGestureMove = (event: TouchEvent) => {\r\n    this.latestGestureDistance = this.getDistanceBetweenTouchPoints(event.touches);\r\n  };\r\n\r\n  private handleGestureEnd = (event: TouchEvent) => {\r\n    this.isMultiTouch = false;\r\n\r\n    this.dispatchGestureEvent(\"gesture\");\r\n\r\n    if (this.latestGestureDistance < this.gestureStartDistance) {\r\n      this.dispatchGestureEvent(\"pinch\");\r\n    } else {\r\n      this.dispatchGestureEvent(\"spread\");\r\n    }\r\n\r\n    this.latestGestureDistance = 0;\r\n  };\r\n\r\n  private getDistanceBetweenTouchPoints = (touches: TouchEvent[\"changedTouches\"]) => {\r\n    const distanceX = touches[0].clientX - touches[1].clientX;\r\n    const distanceY = touches[0].clientY - touches[1].clientY;\r\n    return Math.hypot(distanceX, distanceY);\r\n  };\r\n\r\n  private dispatchSwipeEvent = (gestureType: TGestureType, details: ISwipeEventDetails) => {\r\n    const eventName = this.eventPrefix + gestureType;\r\n    const swipeEvent = new CustomEvent(eventName, { detail: details });\r\n    this.element!.dispatchEvent(swipeEvent);\r\n  };\r\n\r\n  private dispatchGestureEvent = (gestureType: TGestureType) => {\r\n    const eventName = this.eventPrefix + gestureType;\r\n    const gestureEvent = new CustomEvent(eventName);\r\n    this.element!.dispatchEvent(gestureEvent);\r\n  };\r\n}\r\n\r\nexport function useTouchEvents(\r\n  queryStringOrElement: string | HTMLElement,\r\n  options: ITocadaOptions = {}\r\n) {\r\n  return new Tocada(queryStringOrElement, options);\r\n}\r\n"
  ],
  "mappings": "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",
  "debugId": "D640F23BF7D0177964756e2164756e21",
  "names": []
}